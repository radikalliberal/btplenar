-- MySQL Script generated by MySQL Workbench
-- Tue Nov 26 17:44:24 2019
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema btplenar
-- -----------------------------------------------------
DROP SCHEMA IF EXISTS `btplenar` ;

-- -----------------------------------------------------
-- Schema btplenar
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `btplenar` DEFAULT CHARACTER SET utf8 ;
USE `btplenar` ;

-- -----------------------------------------------------
-- Table `btplenar`.`Fraktion`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `btplenar`.`Fraktion` ;

CREATE TABLE IF NOT EXISTS `btplenar`.`Fraktion` (
  `idFraktion` INT NOT NULL,
  `name` VARCHAR(100) NOT NULL,
  `name_kurz` VARCHAR(45) NULL,
  PRIMARY KEY (`idFraktion`),
  UNIQUE INDEX `idFraktion_UNIQUE` (`idFraktion` ASC) VISIBLE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `btplenar`.`MdB`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `btplenar`.`MdB` ;

CREATE TABLE IF NOT EXISTS `btplenar`.`MdB` (
  `idMdB` INT NOT NULL,
  `Nachname` VARCHAR(45) NOT NULL,
  `Vorname` VARCHAR(45) NOT NULL,
  `bt_id` VARCHAR(45) NULL,
  `geschlecht` ENUM('männlich', 'weiblich') NULL,
  `titel` VARCHAR(45) NULL,
  `geburtsdatum` DATE NULL,
  `sterbedatum` DATE NULL,
  `adels_titel` VARCHAR(45) NULL,
  `familienstand` VARCHAR(45) NULL,
  `kinder` INT NULL,
  PRIMARY KEY (`idMdB`),
  UNIQUE INDEX `idMdB_UNIQUE` (`idMdB` ASC) VISIBLE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `btplenar`.`Wahlperiode`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `btplenar`.`Wahlperiode` ;

CREATE TABLE IF NOT EXISTS `btplenar`.`Wahlperiode` (
  `idWahlperiode` INT NOT NULL,
  PRIMARY KEY (`idWahlperiode`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `btplenar`.`Sitzung`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `btplenar`.`Sitzung` ;

CREATE TABLE IF NOT EXISTS `btplenar`.`Sitzung` (
  `wahlperiode` INT NOT NULL,
  `sitzungsnr` INT NOT NULL,
  `idSitzung` INT NOT NULL,
  `datum` DATETIME NOT NULL,
  PRIMARY KEY (`idSitzung`),
  UNIQUE INDEX `idSitzung_UNIQUE` (`idSitzung` ASC) VISIBLE,
  INDEX `wahlperiode_idx` (`wahlperiode` ASC) VISIBLE,
  CONSTRAINT `wahlperiode`
    FOREIGN KEY (`wahlperiode`)
    REFERENCES `btplenar`.`Wahlperiode` (`idWahlperiode`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `btplenar`.`Tagesordnungspunkt`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `btplenar`.`Tagesordnungspunkt` ;

CREATE TABLE IF NOT EXISTS `btplenar`.`Tagesordnungspunkt` (
  `idTagesordnungspunkt` INT NOT NULL,
  `nummer` INT NOT NULL,
  `thema` MEDIUMTEXT NOT NULL,
  `sitzung` INT NOT NULL,
  `zusatztagespunkt` TINYINT NOT NULL,
  `befragung` TINYINT NULL,
  PRIMARY KEY (`idTagesordnungspunkt`),
  INDEX `sitzung_idx` (`sitzung` ASC) VISIBLE,
  UNIQUE INDEX `idTagesordnungspunkt_UNIQUE` (`idTagesordnungspunkt` ASC) VISIBLE,
  CONSTRAINT `sitzung`
    FOREIGN KEY (`sitzung`)
    REFERENCES `btplenar`.`Sitzung` (`idSitzung`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `btplenar`.`Mandat`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `btplenar`.`Mandat` ;

CREATE TABLE IF NOT EXISTS `btplenar`.`Mandat` (
  `idMandat` INT NOT NULL,
  `ab` DATETIME NULL,
  `bis` DATETIME NULL,
  `fraktion` INT NULL,
  `wahlp` INT NOT NULL,
  `art` ENUM('Direktwahl', 'Landesliste', 'Volkskammer') NULL,
  `bundesland` ENUM('BB', 'BE', 'BW', 'BY', 'HB', 'HE', 'HH', 'MV', 'NI', 'NRW', 'RP', 'SH', 'SL', 'SN', 'ST', 'TH') NULL,
  `mdb` INT NOT NULL,
  PRIMARY KEY (`idMandat`),
  INDEX `wahlp_idx` (`wahlp` ASC) VISIBLE,
  INDEX `fraktion_idx` (`fraktion` ASC) VISIBLE,
  INDEX `mdb_idx` (`mdb` ASC) VISIBLE,
  CONSTRAINT `wahlp`
    FOREIGN KEY (`wahlp`)
    REFERENCES `btplenar`.`Wahlperiode` (`idWahlperiode`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fraktion`
    FOREIGN KEY (`fraktion`)
    REFERENCES `btplenar`.`Fraktion` (`idFraktion`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `mdb`
    FOREIGN KEY (`mdb`)
    REFERENCES `btplenar`.`MdB` (`idMdB`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `btplenar`.`Rolle`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `btplenar`.`Rolle` ;

CREATE TABLE IF NOT EXISTS `btplenar`.`Rolle` (
  `idRolle` INT NOT NULL,
  `Rolle_kurz` VARCHAR(255) NULL,
  `Rolle_lang` VARCHAR(255) NULL,
  `mandat` INT NULL,
  `ab` DATETIME NULL,
  `bis` DATETIME NULL,
  PRIMARY KEY (`idRolle`),
  UNIQUE INDEX `idRolle_UNIQUE` (`idRolle` ASC) VISIBLE,
  INDEX `mandat_idx` (`mandat` ASC) VISIBLE,
  CONSTRAINT `mandat`
    FOREIGN KEY (`mandat`)
    REFERENCES `btplenar`.`Mandat` (`idMandat`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `btplenar`.`Rede`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `btplenar`.`Rede` ;

CREATE TABLE IF NOT EXISTS `btplenar`.`Rede` (
  `idRede` BIGINT NOT NULL,
  `redner` INT NOT NULL,
  `top` INT NULL,
  `kurzintervention` BIGINT NULL,
  `antwort_kurzintervention` BIGINT NULL,
  `mitRolle` INT NULL,
  PRIMARY KEY (`idRede`),
  INDEX `redner_idx` (`redner` ASC) VISIBLE,
  INDEX `tagesordnungspunkt_idx` (`top` ASC) VISIBLE,
  UNIQUE INDEX `idRede_UNIQUE` (`idRede` ASC) VISIBLE,
  INDEX `kurzintervention_idx` (`kurzintervention` ASC) VISIBLE,
  INDEX `antwort_kurzintervention_idx` (`antwort_kurzintervention` ASC) VISIBLE,
  INDEX `rolle_idx` (`mitRolle` ASC) VISIBLE,
  CONSTRAINT `redner`
    FOREIGN KEY (`redner`)
    REFERENCES `btplenar`.`MdB` (`idMdB`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `top`
    FOREIGN KEY (`top`)
    REFERENCES `btplenar`.`Tagesordnungspunkt` (`idTagesordnungspunkt`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `kurzintervention`
    FOREIGN KEY (`kurzintervention`)
    REFERENCES `btplenar`.`Rede` (`idRede`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `antwort_kurzintervention`
    FOREIGN KEY (`antwort_kurzintervention`)
    REFERENCES `btplenar`.`Rede` (`idRede`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `rolle`
    FOREIGN KEY (`mitRolle`)
    REFERENCES `btplenar`.`Rolle` (`idRolle`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `btplenar`.`Absatz`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `btplenar`.`Absatz` ;

CREATE TABLE IF NOT EXISTS `btplenar`.`Absatz` (
  `idAbsatz` INT NOT NULL,
  `Text` LONGTEXT NULL,
  `rede` BIGINT NOT NULL,
  `frage_von` INT NULL,
  PRIMARY KEY (`idAbsatz`),
  INDEX `frage_von_idx` (`frage_von` ASC) VISIBLE,
  INDEX `rede_idx` (`rede` ASC) VISIBLE,
  UNIQUE INDEX `idAbsatz_UNIQUE` (`idAbsatz` ASC) VISIBLE,
  CONSTRAINT `frage_von`
    FOREIGN KEY (`frage_von`)
    REFERENCES `btplenar`.`MdB` (`idMdB`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `rede`
    FOREIGN KEY (`rede`)
    REFERENCES `btplenar`.`Rede` (`idRede`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `btplenar`.`Beifall`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `btplenar`.`Beifall` ;

CREATE TABLE IF NOT EXISTS `btplenar`.`Beifall` (
  `idBeifall` INT NOT NULL,
  `alle` TINYINT NOT NULL,
  `von` INT NOT NULL,
  `für` INT NOT NULL,
  `absatz` INT NOT NULL,
  PRIMARY KEY (`idBeifall`),
  INDEX `von_idx` (`von` ASC) VISIBLE,
  INDEX `für_idx` (`für` ASC) VISIBLE,
  INDEX `absatz_idx` (`absatz` ASC) VISIBLE,
  UNIQUE INDEX `idBeifall_UNIQUE` (`idBeifall` ASC) VISIBLE,
  CONSTRAINT `von`
    FOREIGN KEY (`von`)
    REFERENCES `btplenar`.`Fraktion` (`idFraktion`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `für`
    FOREIGN KEY (`für`)
    REFERENCES `btplenar`.`Fraktion` (`idFraktion`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `absatz`
    FOREIGN KEY (`absatz`)
    REFERENCES `btplenar`.`Absatz` (`idAbsatz`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `btplenar`.`Kommentar`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `btplenar`.`Kommentar` ;

CREATE TABLE IF NOT EXISTS `btplenar`.`Kommentar` (
  `idKommentar` INT NOT NULL,
  `fraktion_kommentar` INT NOT NULL,
  `mdb_kommentar` INT NULL,
  `komm_zu_absatz` INT NULL,
  PRIMARY KEY (`idKommentar`),
  INDEX `fraktion_kommentar_idx` (`fraktion_kommentar` ASC) VISIBLE,
  INDEX `mdb_kommentar_idx` (`mdb_kommentar` ASC) VISIBLE,
  UNIQUE INDEX `idKommentar_UNIQUE` (`idKommentar` ASC) VISIBLE,
  INDEX `komm_zu_absatz_idx` (`komm_zu_absatz` ASC) VISIBLE,
  CONSTRAINT `mdb_kommentar`
    FOREIGN KEY (`mdb_kommentar`)
    REFERENCES `btplenar`.`MdB` (`idMdB`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fraktion_kommentar`
    FOREIGN KEY (`fraktion_kommentar`)
    REFERENCES `btplenar`.`Fraktion` (`idFraktion`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `komm_zu_absatz`
    FOREIGN KEY (`komm_zu_absatz`)
    REFERENCES `btplenar`.`Absatz` (`idAbsatz`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
